plugins {
    id "kotlin-multiplatform"
    id "kotlin-native-cocoapods"
}

version '0.1'

kotlin {
    targets {
//        android("android")

        def buildForDevice = project.findProperty('kotlin.native.cocoapods.target') == 'ios_arm'
        def iosPreset = buildForDevice ? presets.iosArm64 : presets.iosX64
        targetFromPreset(iosPreset, 'ios') {
            binaries.all {
                if (it instanceof org.jetbrains.kotlin.gradle.plugin.mpp.Framework) {
//                    export(project(Projects.libSharedDataCommon))
//                    export(project(Projects.planboardSharedData))
                    isStatic = true
                }
            }

            compilations.all {
                kotlinOptions.freeCompilerArgs += ['-module-name', 'AppShared', '-linker-options', '-lsqlite3', '-Xobjc-generics', '-Xg0']
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common:1.3.72'

                api project(':shared:data')
            }
        }

//        androidMain {
//            dependencies {
//                implementation Libraries.kotlinStdlib
//            }
//        }
//
//        iosMain {
//            dependencies {
//                api Libraries.crashkios
//            }
//        }
    }

    cocoapods {
        authors = "Author"
        license = "Custom"
        homepage = "https://www.example.com"
        summary = "App shared library"
    }
}

configurations {
    // workaround for https://youtrack.jetbrains.com/issue/KT-27170
    compileClasspath
}
